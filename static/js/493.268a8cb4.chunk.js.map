{"version":3,"file":"static/js/493.268a8cb4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://react-homework-template/./src/components/Trailers/Trailers.module.css?b22f","components/Trailers/Trailers.jsx","services/Api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalOverlay\":\"Modal_modalOverlay__ZrB5u\",\"modal\":\"Modal_modal__DJDMv\",\"modalPlayer\":\"Modal_modalPlayer__FFSmx\",\"closeButton\":\"Modal_closeButton__Ya+Ev\"};","// Modal.jsx\nimport PropTypes from 'prop-types';\nimport css from './Modal.module.css';\n\nconst Modal = ({ trailerKey, onClose }) => {\n  return (\n    <div className={css.modalOverlay} onClick={onClose}>\n      <div className={css.modal}>\n        <iframe\n          className={css.modalPlayer}\n          src={`https://www.youtube.com/embed/${trailerKey}?autoplay=1`}\n          title=\"Trailer\"\n          allowFullScreen\n          autoPlay={true}\n        />\n        <button className={css.closeButton} onClick={onClose}>\n          Close\n        </button>\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  trailerKey: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Trailers_wrapper__CjjCa\",\"trailerHeader\":\"Trailers_trailerHeader__DYDYJ\",\"trailerContainer\":\"Trailers_trailerContainer__HV6Hp\",\"trailerItem\":\"Trailers_trailerItem__F6VrH\",\"trailerButton\":\"Trailers_trailerButton__2sykm\",\"noTrailersText\":\"Trailers_noTrailersText__DV9kc\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieTrailers } from '../../services/Api';\nimport Modal from '../Modal/Modal';\nimport css from './Trailers.module.css';\n\nconst Trailers = () => {\n  const { movieId } = useParams();\n  const [trailers, setTrailers] = useState([]);\n  const [selectedTrailer, setSelectedTrailer] = useState(null);\n  const [loading, setLoading] = useState(true); // Dodajemy stan do obsługi ładowania\n\n  useEffect(() => {\n    const fetchTrailers = async () => {\n      try {\n        const { results } = await fetchMovieTrailers(movieId);\n        setTrailers(results);\n        setLoading(false); // Ustawiamy stan na false po pobraniu zwiastunów\n      } catch (error) {\n        console.log(error);\n        setLoading(false); // W przypadku błędu ustawiamy stan na false\n      }\n    };\n\n    fetchTrailers();\n  }, [movieId]);\n\n  const handleTrailerClick = trailerKey => {\n    setSelectedTrailer(trailerKey);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedTrailer(null);\n  };\n\n  if (loading) { // Jeśli dane są ładowane, zwracamy komunikat o ładowaniu\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div className={css.wrapper}>\n      <h3 className={css.trailerHeader}>Trailers</h3>\n      <div className={css.trailerContainer}>\n        {trailers.length ? (\n          trailers.map(trailer => (\n            <div key={trailer.id} className={css.trailerItem}>\n              <button\n                className={css.trailerButton}\n                onClick={() => handleTrailerClick(trailer.key)}\n              >\n                {trailer.name}\n              </button>\n            </div>\n          ))\n        ) : (\n          <p className={css.noTrailersText}>No trailers available</p>\n        )}\n      </div>\n      {selectedTrailer && (\n        <Modal trailerKey={selectedTrailer} onClose={handleCloseModal} />\n      )}\n    </div>\n  );\n};\n\nexport default Trailers;\n","// Api.js\n\nconst API_KEY = 'a3f1f92507c0041bd10fd69d00819c73';\n\nconst fetchMovieById = async (movieId) => {\n  const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data;\n};\n\nconst fetchMovieCast = async (movieId) => {\n  const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data.cast;\n};\n\nconst fetchMovieReviews = async (movieId) => {\n  const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data.results;\n};\n\nconst fetchMovieTrailers = async (movieId) => {\n  const response = await fetch(`https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data.results;\n};\n\nconst fetchTrendMovies = async () => {\n  const response = await fetch(`https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`);\n  const data = await response.json();\n  return data.results;\n};\n\nconst fetchMovieByName = async (movieName) => {\n  const response = await fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(movieName)}`);\n  const data = await response.json();\n  return data.results;\n};\n\nexport {\n  fetchMovieById,\n  fetchMovieCast,\n  fetchMovieReviews,\n  fetchMovieTrailers,\n  fetchTrendMovies,\n  fetchMovieByName,\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["_ref","trailerKey","onClose","_jsx","className","css","onClick","children","_jsxs","src","concat","title","allowFullScreen","autoPlay","movieId","useParams","_useState","useState","_useState2","_slicedToArray","trailers","setTrailers","_useState3","_useState4","selectedTrailer","setSelectedTrailer","_useState5","_useState6","loading","setLoading","useEffect","fetchTrailers","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchMovieTrai","results","_context","prev","next","fetchMovieTrailers","sent","t0","console","log","stop","apply","arguments","length","map","trailer","key","name","id","Modal","API_KEY","fetchMovieById","response","data","fetch","json","abrupt","_x","fetchMovieCast","_ref2","_callee2","_context2","cast","_x2","fetchMovieReviews","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","_x4","fetchTrendMovies","_ref5","_callee5","_context5","fetchMovieByName","_ref6","_callee6","movieName","_context6","encodeURIComponent","_x5","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}